/**
 * Import function triggers from their respective submodules:
 *
 * const {onCall} = require("firebase-functions/v2/https");
 * const {onDocumentWritten} = require("firebase-functions/v2/firestore");
 *
 * See a full list of supported triggers at https://firebase.google.com/docs/functions
 */

const { onRequest } = require("firebase-functions/v2/https");
const logger = require("firebase-functions/logger");
const { initializeApp } = require("firebase-admin/app");

// Create and deploy your first functions
// https://firebase.google.com/docs/functions/get-started

initializeApp();

exports.helloWorld = onRequest((request, response) => {
  logger.info("Hello logs!", { structuredData: true });
  response.send("Hello from Firebase!");
});


// // Function to log Firestore collections and documents
// async function logFirestoreCollections() {
//   const db = getFirestore();
//   const collections = await db.listCollections();
//   for (const collection of collections) {
//     const snapshot = await collection.get();
//     snapshot.forEach((doc) => {
//     });
//   }
// }

// // Call the function to log Firestore collections and documents
// logFirestoreCollections();
// Function to log documents in the "users" collection
// async function logUsersCollection() {
//   const db = getFirestore();
//   const usersCollection = db.collection("users");
//   const snapshot = await usersCollection.get();
//   snapshot.forEach((doc) => {
//   });
// }

// // Call the function to log documents in the "users" collection
// logUsersCollection();

// export const modifyuser = onDocumentWritten("users/{userId}", (event) => {
//   // Check if event data exists
//   if (!event.data) {
//     logger.error("No event data found");
//     return;
//   }

//   // Get an object with the current document values.
//   // If the document does not exist, it was deleted
//   const document = event.data.after.exists ? event.data.after.data() : null;
//   logger.info("Current document values:", document);

//   // Get an object with the previous document values
//   const previousValues = event.data.before.exists
//     ? event.data.before.data()
//     : null;
//   logger.info("Previous document values:", previousValues);

//   // Perform additional operations based on the document changes
//   if (document && previousValues) {
//     // Example: Log the changes
//     logger.info(
//       `User ${event.params.userId} updated from`,
//       previousValues,
//       "to",
//       document
//     );
//   } else if (document) {
//     // Example: Log the creation of a new document
//     logger.info(`User ${event.params.userId} created with`, document);
//   } else {
//     // Example: Log the deletion of a document
//     logger.info(`User ${event.params.userId} deleted`);
//   }
// });

/**
 * Import function triggers from their respective submodules:
 *
 * const {onCall} = require("firebase-functions/v2/https");
 * const {onDocumentWritten} = require("firebase-functions/v2/firestore");
 *
 * See a full list of supported triggers at https://firebase.google.com/docs/functions
 */
